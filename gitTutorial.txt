第一讲 创建git仓库：

初始化git仓库，使用git init命令。

添加文件到Git仓库，分两步：

第一步，使用命令git add <file>，注意，可反复多次使用，添加多个文件；

第二步，使用命令git commit，完成。

第二讲 时光穿梭
要随时掌握工作区的状态，使用git status命令。

如果git status告诉你有文件被修改过，用git diff可以查看修改内容。

回退版本命令：
1,回退到上一个版本
git reset --hard HEAD^
2，回退到上上个版本
git reset --hard HEAD^^

HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。

穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。

要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。

×撤销修改

场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。

场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。

场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。

*删除文件
命令git rm用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。

删错了，因为版本库里还有呢，所以可以很轻松地把误删的文件恢复到最新版本：$git checkout -- fileName

第三讲

×分支管理：

git鼓励大量使用分支：

查看分支：git branch

创建分支：git branch <BranchName>

切换分支：git checkout <Branch name>

创建+切换分支：git checkout -b <Branch name>

合并某分支到当前分支：git merge <Branch name>

删除分支：git branch -d <name>





